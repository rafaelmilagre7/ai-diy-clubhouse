
import { useState } from "react";
import { toast } from "sonner";
import { adminForceDeleteUser, type AdminForceDeleteResult } from "@/utils/adminForceDeleteUser";

export const useAdminUserDelete = () => {
  const [isDeleting, setIsDeleting] = useState(false);

  const deleteUser = async (userId: string, userEmail: string): Promise<boolean> => {
    try {
      setIsDeleting(true);
      
      console.log(`üóëÔ∏è [ADMIN DELETE] Iniciando exclus√£o total para: ${userEmail}`);
      
      // Usar a fun√ß√£o unificada que chama a nova SQL function
      const result: AdminForceDeleteResult = await adminForceDeleteUser(userEmail);
      
      if (result.success) {
        const details = result.details;
        
        // Toast de sucesso com detalhes
        toast.success('‚úÖ Usu√°rio removido completamente!', {
          description: `${result.message} - ${details.total_records_deleted} registros removidos em ${details.affected_tables.length} tabelas`,
          duration: 8000
        });
        
        // Log detalhado para admin
        console.log('‚úÖ Exclus√£o total conclu√≠da:', {
          email: userEmail,
          backupRecords: details.backup_records,
          affectedTables: details.affected_tables,
          authUserDeleted: details.auth_user_deleted,
          totalDeleted: details.total_records_deleted,
          timestamp: details.operation_timestamp
        });

        // Mostrar warnings se houver
        if (details.error_count > 0) {
          console.warn('‚ö†Ô∏è Avisos durante a exclus√£o:', details.error_messages);
          toast.warning('‚ö†Ô∏è Exclus√£o conclu√≠da com avisos', {
            description: `${details.error_count} avisos encontrados. Verifique o console para detalhes.`,
            duration: 6000
          });
        }
        
        // Aviso espec√≠fico se auth.users n√£o foi exclu√≠do
        if (!details.auth_user_deleted) {
          toast.info('‚ÑπÔ∏è Aten√ß√£o: Exclus√£o de auth.users', {
            description: 'Usu√°rio removido do sistema p√∫blico. Para remover de auth.users, acesse o Dashboard do Supabase.',
            duration: 10000
          });
        }
        
        return true;
      } else {
        toast.error('‚ùå Erro na exclus√£o total', {
          description: result.message,
          duration: 8000
        });
        
        console.error('‚ùå Falha na exclus√£o total:', result);
        return false;
      }
    } catch (error: any) {
      console.error('‚ùå Erro ao excluir usu√°rio:', error);
      toast.error("‚ùå Erro ao excluir usu√°rio", {
        description: error.message || "Erro desconhecido",
        duration: 8000
      });
      return false;
    } finally {
      setIsDeleting(false);
    }
  };

  return {
    deleteUser,
    isDeleting
  };
};
