
import { useState, useCallback } from 'react';
import { supabase } from '@/lib/supabase';
import { showModernSuccess, showModernError, showModernWarning } from '@/lib/toast-helpers';

export function useInviteDelete() {
  const [isDeleting, setIsDeleting] = useState(false);

  // ‚ö° SOFT DELETE OTIMIZADO - Exclus√£o instant√¢nea com background cleanup
  const deleteInvite = useCallback(async (inviteId: string, inviteEmail?: string) => {
    const startTime = performance.now();
    
    try {
      setIsDeleting(true);
      
      // üöÄ SOFT DELETE - Usa fun√ß√£o otimizada do banco
      const { data, error } = await supabase.rpc('soft_delete_invite_fast', {
        p_invite_id: inviteId
      });
      
      if (error) throw error;
      
      if (!data.success) {
        throw new Error(data.message);
      }
      
      const totalTime = Math.round(performance.now() - startTime);
      
      // üéØ TOAST OTIMIZADO - Feedback instant√¢neo com m√©tricas
      showModernSuccess(
        'üóëÔ∏è Convite removido!',
        `${data.email} (${totalTime}ms) - Limpeza f√≠sica em 24h`,
        { duration: 4000 }
      );
      
      return true;
    } catch (err: any) {
      const totalTime = Math.round(performance.now() - startTime);
      console.error('‚ùå Erro ao excluir convite:', err, `(${totalTime}ms)`);
      
      showModernError(
        'Erro ao remover convite',
        err.message || 'N√£o foi poss√≠vel remover o convite',
        { duration: 6000 }
      );
      return false;
    } finally {
      setIsDeleting(false);
    }
  }, []);

  // üßπ LIMPEZA EM BACKGROUND - Executar limpeza f√≠sica via Edge Function (opcional)
  const cleanupDeletedInvites = useCallback(async () => {
    try {
      const { data, error } = await supabase.functions.invoke('cleanup-deleted-invites', {
        body: { force: false }
      });
      
      if (error) throw error;
      
      showModernSuccess(
        'üßπ Limpeza conclu√≠da',
        `${data.cleaned_count || 0} convites removidos fisicamente`,
        { duration: 3000 }
      );
    } catch (err: any) {
      console.error('‚ùå Erro na limpeza:', err);
      showModernWarning(
        'Falha na limpeza autom√°tica',
        'A limpeza ser√° executada automaticamente mais tarde',
        { duration: 4000 }
      );
    }
  }, []);

  // üóëÔ∏è DELETAR FISICAMENTE CONVITE POR EMAIL - Para casos espec√≠ficos
  const forceDeleteInviteByEmail = useCallback(async (email: string) => {
    try {
      const { data, error } = await supabase.functions.invoke('admin-delete-invite', {
        body: { email }
      });
      
      if (error) throw error;
      
      showModernSuccess(
        'üóëÔ∏è Convite deletado',
        data.message,
        { duration: 4000 }
      );
      
      return true;
    } catch (err: any) {
      console.error('‚ùå Erro na dele√ß√£o f√≠sica:', err);
      showModernError(
        'Falha na dele√ß√£o f√≠sica',
        err.message || 'N√£o foi poss√≠vel deletar o convite',
        { duration: 4000 }
      );
      return false;
    }
  }, []);

  return {
    isDeleting,
    deleteInvite,
    cleanupDeletedInvites,
    forceDeleteInviteByEmail
  };
}
