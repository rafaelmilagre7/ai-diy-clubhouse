/**
 * Hook para detectar mudan√ßas de permiss√µes em tempo real
 * For√ßa atualiza√ß√£o quando admin altera permiss√µes de roles
 */

import { useEffect } from 'react';
import { useQueryClient } from '@tanstack/react-query';
import { useAuth } from '@/contexts/auth';
import { useGlobalPermissionListener } from '@/utils/roleSync';
import { getUserRoleName } from '@/lib/supabase/types';
import { toast } from 'sonner';

export const usePermissionListener = () => {
  const queryClient = useQueryClient();
  const { profile, user } = useAuth();
  const userRole = getUserRoleName(profile);

  useEffect(() => {
    if (!user?.id) return;

    // Configurar listener para mudan√ßas de permiss√µes
    const cleanup = useGlobalPermissionListener(async (syncEvent) => {
      console.log('üîÑ [PERMISSION-LISTENER] Detectada mudan√ßa de permiss√µes:', syncEvent);

      // Verificar se esta mudan√ßa afeta o usu√°rio atual
      const isAffected = syncEvent.roleAffected === userRole || 
                        syncEvent.roleAffected === 'system-wide';

      if (isAffected) {
        console.log(`üéØ [PERMISSION-LISTENER] Usu√°rio afetado pela mudan√ßa no role: ${syncEvent.roleAffected}`);
        
        // Invalidar caches relacionados a permiss√µes
        await Promise.all([
          queryClient.invalidateQueries({ queryKey: ['user-permissions'] }),
          queryClient.invalidateQueries({ queryKey: ['permissions'] }),
          queryClient.invalidateQueries({ queryKey: ['profiles'] }),
          queryClient.invalidateQueries({ queryKey: ['feature-access'] }),
          queryClient.invalidateQueries({ queryKey: ['smart-feature-access'] }),
        ]);

        // Mostrar notifica√ß√£o discreta para o usu√°rio
        if (syncEvent.roleAffected !== 'system-wide') {
          toast.info('‚ö° Suas permiss√µes foram atualizadas', {
            description: 'As mudan√ßas j√° est√£o ativas na plataforma',
            duration: 3000,
          });
        }

        // Log para debug
        console.log('‚úÖ [PERMISSION-LISTENER] Cache invalidado para usu√°rio:', {
          userId: user.id.substring(0, 8) + '***',
          userRole,
          syncEvent
        });
      }
    });

    return cleanup;
  }, [user?.id, userRole, queryClient]);
};