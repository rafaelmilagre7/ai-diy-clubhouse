
import { QuickOnboardingData } from '@/types/quickOnboarding';
import { OnboardingProgress, OnboardingData } from '@/types/onboarding';

export const mapQuickToProgress = (data: QuickOnboardingData): OnboardingProgress => {
  return {
    id: '', // Will be generated by Supabase
    user_id: '', // Will be set by the calling function
    current_step: '1',
    completed_steps: [],
    is_completed: false,
    personal_info: {
      name: data.name || '',
      email: data.email || '',
      phone: data.whatsapp || '', // Map whatsapp to phone
      ddi: data.country_code || '+55', // Map country_code to ddi
      linkedin: data.linkedin_url || '',
      instagram: data.instagram_url || '',
      country: data.country || '',
      state: data.state || '',
      city: data.city || '',
      timezone: data.timezone || '',
      birth_date: data.birth_date || undefined
    },
    professional_info: {
      company_name: data.company_name || '',
      company_size: data.company_size || '',
      company_sector: data.company_segment || '',
      company_website: data.company_website || '',
      current_position: data.role || '',
      annual_revenue: data.annual_revenue_range || ''
    },
    business_context: {
      business_model: data.business_model || '',
      business_challenges: data.business_challenges || [],
      additional_context: data.additional_context || ''
    },
    business_goals: {
      primary_goal: data.primary_goal || '',
      expected_outcomes: data.expected_outcomes || [],
      timeline: '', // Not available in QuickOnboardingData
      priority_solution_type: data.priority_solution_type || '',
      how_implement: data.how_implement || '',
      week_availability: data.week_availability || '',
      live_interest: data.live_interest || 0,
      content_formats: data.content_formats || []
    },
    ai_experience: {
      knowledge_level: data.ai_knowledge_level || '',
      previous_tools: data.previous_tools || [], // Correct property name
      has_implemented: data.has_implemented || '', // Correct property name
      desired_ai_areas: data.desired_ai_areas || []
    },
    experience_personalization: {
      interests: data.interests || [],
      time_preference: data.time_preference || [],
      available_days: data.available_days || [],
      networking_availability: data.networking_availability || 0,
      skills_to_share: data.skills_to_share || [],
      mentorship_topics: data.mentorship_topics || []
    },
    complementary_info: {
      how_found_us: data.how_found_us || '',
      referred_by: data.referred_by || '',
      authorize_case_usage: typeof data.authorize_case_usage === 'boolean' ? data.authorize_case_usage : false,
      interested_in_interview: typeof data.interested_in_interview === 'boolean' ? data.interested_in_interview : false,
      priority_topics: data.priority_topics || []
    },
    
    // Campos legacy para compatibilidade
    business_data: {},
    company_name: data.company_name || '',
    company_size: data.company_size || '',
    company_sector: data.company_segment || '',
    company_website: data.company_website || '',
    current_position: data.role || '',
    annual_revenue: data.annual_revenue_range || '',
    
    sync_status: 'pending',
    debug_logs: []
  };
};

export const mapProgressToQuick = (progress: OnboardingProgress): QuickOnboardingData => {
  return {
    // Campos pessoais
    name: progress.personal_info?.name || '',
    email: progress.personal_info?.email || '',
    whatsapp: progress.personal_info?.phone || '', // Map phone to whatsapp
    country_code: progress.personal_info?.ddi || '+55', // Map ddi to country_code
    birth_date: progress.personal_info?.birth_date || '',

    // Localização
    country: progress.personal_info?.country || '',
    state: progress.personal_info?.state || '',
    city: progress.personal_info?.city || '',
    timezone: progress.personal_info?.timezone || '',
    instagram_url: progress.personal_info?.instagram || '',
    linkedin_url: progress.personal_info?.linkedin || '',

    // Como nos conheceu
    how_found_us: progress.complementary_info?.how_found_us || '',
    referred_by: progress.complementary_info?.referred_by || '',

    // Campos profissionais
    company_name: progress.professional_info?.company_name || '',
    role: progress.professional_info?.current_position || '',
    company_size: progress.professional_info?.company_size || '',
    company_segment: progress.professional_info?.company_sector || '',
    company_website: progress.professional_info?.company_website || '',
    annual_revenue_range: progress.professional_info?.annual_revenue || '',
    current_position: progress.professional_info?.current_position || '',

    // Contexto do negócio
    business_model: progress.business_context?.business_model || '',
    business_challenges: progress.business_context?.business_challenges || [],
    short_term_goals: [], // Not mapped in current structure
    medium_term_goals: [], // Not mapped in current structure
    important_kpis: [], // Not mapped in current structure
    additional_context: progress.business_context?.additional_context || '',

    // Objetivos
    primary_goal: progress.business_goals?.primary_goal || '',
    expected_outcomes: progress.business_goals?.expected_outcomes || [],
    expected_outcome_30days: '', // Not mapped in current structure
    priority_solution_type: progress.business_goals?.priority_solution_type || '',
    how_implement: progress.business_goals?.how_implement || '',
    week_availability: progress.business_goals?.week_availability || '',
    content_formats: progress.business_goals?.content_formats || [],

    // Experiência com IA
    ai_knowledge_level: typeof progress.ai_experience === 'object' && progress.ai_experience !== null 
      ? progress.ai_experience.knowledge_level || ''
      : '',
    previous_tools: typeof progress.ai_experience === 'object' && progress.ai_experience !== null
      ? progress.ai_experience.previous_tools || []
      : [],
    has_implemented: typeof progress.ai_experience === 'object' && progress.ai_experience !== null
      ? progress.ai_experience.has_implemented || ''
      : '',
    desired_ai_areas: typeof progress.ai_experience === 'object' && progress.ai_experience !== null
      ? progress.ai_experience.desired_ai_areas || []
      : [],

    // Personalização
    interests: progress.experience_personalization?.interests || [],
    time_preference: progress.experience_personalization?.time_preference || [],
    available_days: progress.experience_personalization?.available_days || [],
    networking_availability: progress.experience_personalization?.networking_availability || 0,
    skills_to_share: progress.experience_personalization?.skills_to_share || [],
    mentorship_topics: progress.experience_personalization?.mentorship_topics || [],

    // Complementares
    authorize_case_usage: progress.complementary_info?.authorize_case_usage || false,
    interested_in_interview: progress.complementary_info?.interested_in_interview || false,
    priority_topics: progress.complementary_info?.priority_topics || [],

    // Campos de controle
    live_interest: progress.business_goals?.live_interest || 0
  };
};

export const validateStepData = (data: QuickOnboardingData, step: number): boolean => {
  switch (step) {
    case 1: // Dados pessoais
      return !!(data.name && data.name.trim().length > 0);
    case 2: // Contato
      return !!(data.email && data.whatsapp); // Use whatsapp instead of phone
    case 3: // Localização
      return !!(data.country && data.state && data.city);
    case 4: // Negócio
      return !!(data.company_name && data.role && data.company_size);
    case 5: // Contexto
      return !!(data.business_model && data.business_challenges && data.business_challenges.length > 0);
    case 6: // Como nos conheceu
      return !!(data.how_found_us);
    default:
      return true;
  }
};
