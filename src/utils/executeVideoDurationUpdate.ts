import { toast } from 'sonner';
import { supabase } from '@/integrations/supabase/client';

/**
 * Executa atualiza√ß√£o otimizada de dura√ß√µes de v√≠deos
 * Vers√£o melhorada que substitui a fun√ß√£o anterior
 */
export const executeVideoDurationUpdate = async (): Promise<boolean> => {
  try {
    console.log('üéØ Executando atualiza√ß√£o otimizada de dura√ß√µes...');
    
    // Mostrar toast informativo
    toast.info('‚ö° Verificando dura√ß√µes de v√≠deos...', {
      description: 'Processo otimizado em segundo plano'
    });

    // Chamar a edge function melhorada
    const { data, error } = await supabase.functions.invoke('calculate-course-durations', {
      body: { syncAll: true }
    });

    if (error) {
      console.error('‚ùå Erro na edge function:', error);
      
      // N√£o mostrar error toast agressivo, s√≥ log
      console.log('‚ÑπÔ∏è Sincroniza√ß√£o ser√° executada em segundo plano');
      return false;
    }

    if (data?.success) {
      console.log('‚úÖ Atualiza√ß√£o executada com sucesso:', data);
      
      // Toast discreto de sucesso
      if (data.globalStats?.totalVideosSynced > 0) {
        toast.success('‚ú® Dura√ß√µes atualizadas', {
          description: `${data.globalStats.totalVideosSynced} v√≠deos sincronizados`
        });
      }
      
      return true;
    }

    return false;
  } catch (error: any) {
    console.error('‚ùå Erro na execu√ß√£o:', error);
    
    // Log apenas, sem mostrar erro para usu√°rio (opera√ß√£o em background)
    console.log('‚ÑπÔ∏è Atualiza√ß√£o ser√° tentada novamente mais tarde');
    return false;
  }
};