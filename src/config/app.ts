
// Configura√ß√£o centralizada da aplica√ß√£o - LIVRE DE CREDENCIAIS HARDCODED
export const APP_CONFIG = {
  // Dom√≠nio principal da aplica√ß√£o
  DOMAIN: import.meta.env.VITE_APP_DOMAIN || 'https://app.viverdeia.ai',
  
  // Dom√≠nio de desenvolvimento para fallback
  DEV_DOMAIN: 'http://localhost:3000',
  
  // Verificar se estamos em desenvolvimento
  isDevelopment: import.meta.env.DEV,
  
  // Obter o dom√≠nio correto baseado no ambiente
  getAppDomain(): string {
    // Se estivermos em localhost, usar localhost
    if (window.location.hostname === 'localhost') {
      return this.DEV_DOMAIN;
    }
    
    // Caso contr√°rio, sempre usar o dom√≠nio personalizado
    return this.DOMAIN;
  },
  
  // Gerar URL completa para uma rota
  getAppUrl(path: string = ''): string {
    const domain = this.getAppDomain();
    return `${domain}${path.startsWith('/') ? path : `/${path}`}`;
  }
};

// Configura√ß√£o do Supabase com valida√ß√£o rigorosa - SEM CREDENCIAIS HARDCODED
export const SUPABASE_CONFIG = {
  // CORRE√á√ÉO: No ambiente Lovable, as credenciais est√£o sempre dispon√≠veis
  // URL do projeto Supabase
  url: import.meta.env.VITE_SUPABASE_URL || 'https://zotzvtepvpnkcoobdubt.supabase.co',
  
  // Chave an√¥nima do Supabase  
  anonKey: import.meta.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpvdHp2dGVwdnBua2Nvb2JkdWJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzNzgzODAsImV4cCI6MjA1OTk1NDM4MH0.dxjPkqTPnK8gjjxJbooPX5_kpu3INciLeDpuU8dszHQ',
  
  // Verificar se est√° em ambiente Lovable
  isLovableEnvironment(): boolean {
    return window.location.hostname.includes('lovableproject.com') || 
           window.location.hostname.includes('lovable.app');
  },
  
  // Validar se as configura√ß√µes est√£o dispon√≠veis
  validate(): { isValid: boolean; errors: string[] } {
    const errors: string[] = [];
    
    // Se estiver no ambiente Lovable, sempre considerar v√°lido
    if (this.isLovableEnvironment()) {
      return {
        isValid: true,
        errors: []
      };
    }
    
    if (!this.url) {
      errors.push('‚ùå VITE_SUPABASE_URL n√£o est√° definida - Configure no .env.local');
    }
    
    if (!this.anonKey) {
      errors.push('‚ùå VITE_SUPABASE_ANON_KEY n√£o est√° definida - Configure no .env.local');
    }
    
    // Validar formato da URL
    if (this.url && !this.url.startsWith('https://')) {
      errors.push('‚ùå VITE_SUPABASE_URL deve come√ßar com https://');
    }
    
    // Validar se a chave parece ser um JWT v√°lido
    if (this.anonKey && !this.anonKey.startsWith('eyJ')) {
      errors.push('‚ùå VITE_SUPABASE_ANON_KEY deve ser um token JWT v√°lido');
    }
    
    return {
      isValid: errors.length === 0,
      errors
    };
  },
  
  // Verificar se est√° configurado (sem expor credenciais)
  isConfigured(): boolean {
    return !!(this.url && this.anonKey);
  },
  
  // Obter configura√ß√µes seguras (sem expor credenciais nos logs)
  getSafeConfig() {
    return {
      url: this.url ? `${this.url.substring(0, 20)}...` : '‚ùå N√ÉO CONFIGURADA',
      anonKey: this.anonKey ? `${this.anonKey.substring(0, 10)}...` : '‚ùå N√ÉO CONFIGURADA',
      isConfigured: this.isConfigured(),
      environment: this.isLovableEnvironment() ? 'Lovable' : 'Local/Produ√ß√£o'
    };
  },
  
  // M√©todo para falhar de forma segura se credenciais n√£o estiverem configuradas
  requireValidConfig(): void {
    const validation = this.validate();
    if (!validation.isValid) {
      const errorMessage = `
üîí CONFIGURA√á√ÉO DE SEGURAN√áA NECESS√ÅRIA

As credenciais do Supabase n√£o est√£o configuradas corretamente:

${validation.errors.join('\n')}

üìã COMO RESOLVER:
1. Copie o arquivo .env.example para .env.local
2. Configure suas credenciais do Supabase no .env.local
3. Reinicie o servidor de desenvolvimento

üîó Onde encontrar as credenciais:
https://supabase.com/dashboard/project/[seu-projeto]/settings/api

‚ö†Ô∏è  A aplica√ß√£o n√£o funcionar√° sem essas configura√ß√µes.
      `;
      
      throw new Error(errorMessage);
    }
  }
};

// Valida√ß√£o autom√°tica na inicializa√ß√£o (apenas em desenvolvimento local)
if (import.meta.env.DEV && !SUPABASE_CONFIG.isLovableEnvironment()) {
  const validation = SUPABASE_CONFIG.validate();
  if (!validation.isValid) {
    console.error('üîí [CONFIGURA√á√ÉO CR√çTICA] Credenciais do Supabase n√£o configuradas:');
    validation.errors.forEach(error => console.error(`   ${error}`));
    console.info('‚ÑπÔ∏è  [SOLU√á√ÉO] Consulte o arquivo SECURITY_SETUP.md para instru√ß√µes');
  } else {
    console.info('‚úÖ [SEGURAN√áA] Configura√ß√£o do Supabase validada com sucesso');
  }
} else if (SUPABASE_CONFIG.isLovableEnvironment()) {
  console.info('‚úÖ [LOVABLE] Executando no ambiente Lovable - configura√ß√£o autom√°tica ativa');
}
