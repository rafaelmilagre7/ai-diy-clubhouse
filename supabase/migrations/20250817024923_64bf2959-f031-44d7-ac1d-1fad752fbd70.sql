-- üîí CORRE√á√ÉO CR√çTICA: Prote√ß√£o de Conte√∫do Educacional Premium (Corrigida)
-- Remove acesso n√£o autorizado a cursos, m√≥dulos e li√ß√µes premium

-- ==========================================
-- 1. LEARNING LESSONS - Remover pol√≠ticas vulner√°veis
-- ==========================================

-- Remover pol√≠tica que permite acesso a todas as li√ß√µes publicadas
DROP POLICY IF EXISTS "learning_lessons_unified_access" ON public.learning_lessons;

-- Remover pol√≠tica redundante/conflitante
DROP POLICY IF EXISTS "Usu√°rios autenticados podem ver aulas de m√≥dulos publicados" ON public.learning_lessons;

-- Nova pol√≠tica segura: apenas usu√°rios com acesso autorizado ao curso
CREATE POLICY "learning_lessons_secure_access" ON public.learning_lessons
FOR SELECT TO authenticated
USING (
  auth.uid() IS NOT NULL 
  AND (
    -- Admins t√™m acesso total
    is_user_admin_secure(auth.uid())
    OR
    -- Autores do curso t√™m acesso
    EXISTS (
      SELECT 1 FROM public.learning_modules lm
      JOIN public.learning_courses lc ON lm.course_id = lc.id
      WHERE lm.id = module_id AND lc.created_by = auth.uid()
    )
    OR  
    -- Usu√°rios com acesso expl√≠cito ao curso via enrollment
    EXISTS (
      SELECT 1 FROM public.learning_modules lm
      JOIN public.user_course_access uca ON lm.course_id = uca.course_id
      WHERE lm.id = module_id 
      AND uca.user_id = auth.uid()
      AND uca.access_type = 'granted'
      AND (uca.expires_at IS NULL OR uca.expires_at > now())
    )
  )
  AND published = true
);

-- ==========================================  
-- 2. LEARNING MODULES - Remover pol√≠ticas vulner√°veis
-- ==========================================

-- Remover pol√≠tica que permite acesso a todos os m√≥dulos publicados
DROP POLICY IF EXISTS "learning_modules_unified_access" ON public.learning_modules;

-- Remover pol√≠tica redundante/conflitante
DROP POLICY IF EXISTS "Usu√°rios autenticados podem ver m√≥dulos de cursos publicados" ON public.learning_modules;

-- Nova pol√≠tica segura: apenas usu√°rios com acesso autorizado
CREATE POLICY "learning_modules_secure_access" ON public.learning_modules
FOR SELECT TO authenticated
USING (
  auth.uid() IS NOT NULL
  AND (
    -- Admins t√™m acesso total
    is_user_admin_secure(auth.uid())
    OR
    -- Autores do curso t√™m acesso  
    EXISTS (
      SELECT 1 FROM public.learning_courses lc
      WHERE lc.id = course_id AND lc.created_by = auth.uid()
    )
    OR
    -- Usu√°rios com acesso expl√≠cito via enrollment
    EXISTS (
      SELECT 1 FROM public.user_course_access uca
      WHERE uca.course_id = learning_modules.course_id
      AND uca.user_id = auth.uid() 
      AND uca.access_type = 'granted'
      AND (uca.expires_at IS NULL OR uca.expires_at > now())
    )
  )
  AND published = true
);

-- ==========================================
-- 3. PROTE√á√ÉO USER COURSE ACCESS
-- ==========================================

-- Garantir que a tabela de acesso tem RLS habilitado
ALTER TABLE public.user_course_access ENABLE ROW LEVEL SECURITY;

-- Remover pol√≠ticas existentes se houver conflito
DROP POLICY IF EXISTS "users_can_view_own_course_access" ON public.user_course_access;
DROP POLICY IF EXISTS "admins_can_grant_course_access" ON public.user_course_access;
DROP POLICY IF EXISTS "admins_can_modify_course_access" ON public.user_course_access;

-- Pol√≠tica para usu√°rios verem apenas seus pr√≥prios acessos
CREATE POLICY "users_can_view_own_course_access" ON public.user_course_access
FOR SELECT TO authenticated
USING (user_id = auth.uid() OR is_user_admin_secure(auth.uid()));

-- Pol√≠tica para inser√ß√£o (apenas admins podem conceder acesso)
CREATE POLICY "admins_can_grant_course_access" ON public.user_course_access
FOR INSERT TO authenticated  
WITH CHECK (is_user_admin_secure(auth.uid()));

-- Pol√≠tica para atualiza√ß√£o (apenas admins)
CREATE POLICY "admins_can_modify_course_access" ON public.user_course_access
FOR UPDATE TO authenticated
USING (is_user_admin_secure(auth.uid()));

-- ==========================================
-- 4. VERIFICA√á√ïES DE SEGURAN√áA
-- ==========================================

-- Garantir RLS habilitado em todas as tabelas
ALTER TABLE public.learning_lessons ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.learning_modules ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.learning_courses ENABLE ROW LEVEL SECURITY;

-- ==========================================
-- 5. LOG DE AUDITORIA CR√çTICA
-- ==========================================

-- Registrar corre√ß√£o de exposi√ß√£o de conte√∫do premium
INSERT INTO public.audit_logs (
  user_id,
  event_type,
  action,
  details, 
  severity
) VALUES (
  auth.uid(),
  'content_protection',
  'premium_content_access_secured',
  jsonb_build_object(
    'tables_secured', ARRAY['learning_lessons', 'learning_modules', 'learning_courses', 'user_course_access'],
    'vulnerability_type', 'unauthorized_premium_content_access',
    'risk_level', 'critical',
    'data_protected', 'educational_content_titles_descriptions_structure',
    'fix_applied', 'enrollment_based_access_control',
    'policies_removed', ARRAY['learning_lessons_unified_access', 'learning_modules_unified_access'],
    'policies_added', ARRAY['learning_lessons_secure_access', 'learning_modules_secure_access'],
    'timestamp', now()
  ),
  'critical'
);