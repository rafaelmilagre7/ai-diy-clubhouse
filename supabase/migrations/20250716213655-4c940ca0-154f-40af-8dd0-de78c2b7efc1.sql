-- FASE 5: An√°lise de Pol√≠ticas RLS An√¥nimas e Potencialmente Inseguras

-- 1. Fun√ß√£o para analisar pol√≠ticas RLS potencialmente problem√°ticas
CREATE OR REPLACE FUNCTION public.analyze_rls_security_issues()
RETURNS TABLE(
  table_name text,
  policy_name text,
  policy_type text,
  security_level text,
  issue_description text,
  recommendation text,
  policy_definition text
)
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path TO ''
AS $$
BEGIN
  RETURN QUERY
  SELECT 
    p.tablename::text,
    p.policyname::text,
    p.cmd::text,
    CASE 
      WHEN p.qual LIKE '%true%' AND p.cmd = 'SELECT' THEN 'üî¥ CR√çTICO'
      WHEN p.qual LIKE '%true%' AND p.cmd != 'SELECT' THEN 'üî¥ EXTREMAMENTE CR√çTICO'
      WHEN p.qual LIKE '%auth.uid() IS NOT NULL%' AND p.cmd != 'SELECT' THEN '‚ö†Ô∏è POTENCIAL RISCO'
      WHEN p.qual LIKE '%auth.uid() IS NOT NULL%' AND p.cmd = 'SELECT' THEN 'üü° REVISAR'
      WHEN p.qual LIKE '%OR true%' THEN 'üî¥ CR√çTICO'
      WHEN p.qual LIKE '%1 = 1%' THEN 'üî¥ CR√çTICO'
      ELSE '‚úÖ APARENTEMENTE SEGURO'
    END::text,
    CASE 
      WHEN p.qual LIKE '%true%' AND p.cmd = 'SELECT' THEN 'Pol√≠tica permite acesso p√∫blico total para leitura'
      WHEN p.qual LIKE '%true%' AND p.cmd != 'SELECT' THEN 'Pol√≠tica permite modifica√ß√£o p√∫blica total'
      WHEN p.qual LIKE '%OR true%' THEN 'Pol√≠tica cont√©m bypass de seguran√ßa'
      WHEN p.qual LIKE '%1 = 1%' THEN 'Pol√≠tica cont√©m condi√ß√£o sempre verdadeira'
      WHEN p.qual LIKE '%auth.uid() IS NOT NULL%' AND p.cmd != 'SELECT' THEN 'Permite qualquer usu√°rio autenticado modificar'
      ELSE 'Pol√≠tica aparentemente segura'
    END::text,
    CASE 
      WHEN p.qual LIKE '%true%' AND p.cmd = 'SELECT' THEN 'Revisar se acesso p√∫blico √© realmente necess√°rio'
      WHEN p.qual LIKE '%true%' AND p.cmd != 'SELECT' THEN 'URGENTE: Restringir acesso de modifica√ß√£o'
      WHEN p.qual LIKE '%OR true%' THEN 'URGENTE: Remover bypass de seguran√ßa'
      WHEN p.qual LIKE '%1 = 1%' THEN 'URGENTE: Corrigir condi√ß√£o sempre verdadeira'
      WHEN p.qual LIKE '%auth.uid() IS NOT NULL%' AND p.cmd != 'SELECT' THEN 'Adicionar valida√ß√£o de propriedade/permiss√£o'
      ELSE 'Manter monitoramento'
    END::text,
    substr(p.qual, 1, 200)::text
  FROM pg_policies p
  WHERE p.schemaname = 'public'
  ORDER BY 
    CASE 
      WHEN p.qual LIKE '%true%' AND p.cmd != 'SELECT' THEN 1
      WHEN p.qual LIKE '%OR true%' THEN 2
      WHEN p.qual LIKE '%1 = 1%' THEN 3
      WHEN p.qual LIKE '%true%' AND p.cmd = 'SELECT' THEN 4
      WHEN p.qual LIKE '%auth.uid() IS NOT NULL%' AND p.cmd != 'SELECT' THEN 5
      ELSE 6
    END,
    p.tablename, p.policyname;
END;
$$;

-- 2. Relat√≥rio de tabelas sem RLS
CREATE OR REPLACE FUNCTION public.check_tables_without_rls()
RETURNS TABLE(
  table_name text,
  rls_status text,
  risk_level text,
  recommendation text
)
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path TO ''
AS $$
BEGIN
  RETURN QUERY
  SELECT 
    t.tablename::text,
    CASE WHEN t.rowsecurity THEN 'HABILITADO' ELSE 'DESABILITADO' END::text,
    CASE WHEN NOT t.rowsecurity THEN 'üî¥ ALTO RISCO' ELSE '‚úÖ PROTEGIDO' END::text,
    CASE WHEN NOT t.rowsecurity THEN 'URGENTE: Habilitar RLS e criar pol√≠ticas' ELSE 'Manter RLS habilitado' END::text
  FROM pg_tables t
  WHERE t.schemaname = 'public'
  AND t.tablename NOT LIKE '%backup%'
  ORDER BY t.rowsecurity ASC, t.tablename;
END;
$$;

-- 3. Log da FASE 5
INSERT INTO public.audit_logs (
  event_type,
  action,
  details,
  user_id
) VALUES (
  'security_audit',
  'phase_5_rls_analysis_started',
  jsonb_build_object(
    'phase', '5_RLS_SECURITY_ANALYSIS',
    'status', 'INICIADA',
    'focus', 'An√°lise de pol√≠ticas RLS an√¥nimas e inseguras',
    'functions_created', ARRAY['analyze_rls_security_issues', 'check_tables_without_rls'],
    'next_steps', 'Executar an√°lises e corrigir pol√≠ticas problem√°ticas',
    'timestamp', now()
  ),
  auth.uid()
);

-- 4. Executar an√°lise inicial automaticamente
SELECT 'FASE 5 INICIADA: An√°lise de Seguran√ßa RLS' as status;