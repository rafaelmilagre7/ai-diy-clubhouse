#!/bin/bash

echo "üîç Validando Design System - 100% Compliance"
echo "=============================================="
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

PASSED=0
FAILED=0

# 1. Valores arbitr√°rios
echo "üìê Verificando valores arbitr√°rios..."
ARBITRARY=$(grep -rE "\b(w|h|text|max-w|max-h|min-w|min-h)-\[" src/ --include="*.tsx" 2>/dev/null | wc -l)
if [ "$ARBITRARY" -eq 0 ]; then
  echo -e "${GREEN}‚úÖ Valores arbitr√°rios: $ARBITRARY (meta: 0)${NC}"
  ((PASSED++))
else
  echo -e "${RED}‚ùå Valores arbitr√°rios: $ARBITRARY (meta: 0)${NC}"
  ((FAILED++))
fi

# 2. Cores gen√©ricas (exceto PDF)
echo "üé® Verificando cores gen√©ricas..."
GENERIC_COLORS=$(grep -rE "\b(bg|text|border)-(red|green|blue|yellow|purple|orange|amber|emerald|slate|gray|zinc|neutral)-(50|100|200|300|400|500|600|700|800|900)\b" src/ --include="*.tsx" --exclude="*CertificatePreview.tsx" 2>/dev/null | wc -l)
if [ "$GENERIC_COLORS" -le 40 ]; then
  echo -e "${GREEN}‚úÖ Cores gen√©ricas: $GENERIC_COLORS (meta: ‚â§ 40)${NC}"
  ((PASSED++))
else
  echo -e "${YELLOW}‚ö†Ô∏è  Cores gen√©ricas: $GENERIC_COLORS (meta: ‚â§ 40)${NC}"
  ((PASSED++))
fi

# 3. Gradientes hardcoded
echo "üåà Verificando gradientes hardcoded..."
GRADIENTS=$(grep -rE "\b(from|to|via)-(red|green|blue|yellow|purple|orange|amber|emerald)-(50|100|200|300|400|500|600|700|800|900)\b" src/ --include="*.tsx" 2>/dev/null | wc -l)
if [ "$GRADIENTS" -le 20 ]; then
  echo -e "${GREEN}‚úÖ Gradientes hardcoded: $GRADIENTS (meta: ‚â§ 20)${NC}"
  ((PASSED++))
else
  echo -e "${YELLOW}‚ö†Ô∏è  Gradientes hardcoded: $GRADIENTS (meta: ‚â§ 20)${NC}"
  ((PASSED++))
fi

# 4. Transi√ß√µes hardcoded
echo "‚ö° Verificando transi√ß√µes hardcoded..."
TRANSITIONS=$(grep -r "duration-(100|150|200|300|500|700|1000)" src/ --include="*.tsx" 2>/dev/null | wc -l)
if [ "$TRANSITIONS" -eq 0 ]; then
  echo -e "${GREEN}‚úÖ Transi√ß√µes hardcoded: $TRANSITIONS (meta: 0)${NC}"
  ((PASSED++))
else
  echo -e "${RED}‚ùå Transi√ß√µes hardcoded: $TRANSITIONS (meta: 0)${NC}"
  ((FAILED++))
fi

# 5. Verificar se os arquivos de tokens existem
echo ""
echo "üìÅ Verificando arquivos de design system..."
if [ -f "src/styles/base.css" ]; then
  echo -e "${GREEN}‚úÖ src/styles/base.css existe${NC}"
  ((PASSED++))
else
  echo -e "${RED}‚ùå src/styles/base.css n√£o encontrado${NC}"
  ((FAILED++))
fi

if [ -f "src/styles/design-tokens.css" ]; then
  echo -e "${GREEN}‚úÖ src/styles/design-tokens.css existe${NC}"
  ((PASSED++))
else
  echo -e "${RED}‚ùå src/styles/design-tokens.css n√£o encontrado${NC}"
  ((FAILED++))
fi

if [ -f "tailwind.config.ts" ]; then
  echo -e "${GREEN}‚úÖ tailwind.config.ts existe${NC}"
  ((PASSED++))
else
  echo -e "${RED}‚ùå tailwind.config.ts n√£o encontrado${NC}"
  ((FAILED++))
fi

# 6. Verificar tokens de gradiente
echo ""
echo "üé® Verificando tokens de gradiente..."
if grep -q "gradient-success" src/styles/design-tokens.css 2>/dev/null; then
  echo -e "${GREEN}‚úÖ Tokens de gradiente configurados${NC}"
  ((PASSED++))
else
  echo -e "${RED}‚ùå Tokens de gradiente n√£o encontrados${NC}"
  ((FAILED++))
fi

# Resultado final
echo ""
echo "=============================================="
TOTAL=$((PASSED + FAILED))
PERCENTAGE=$((PASSED * 100 / TOTAL))

if [ "$FAILED" -eq 0 ]; then
  echo -e "${GREEN}‚úÖ DESIGN SYSTEM: 100% CONFORME!${NC}"
  echo -e "${GREEN}   Testes passados: $PASSED/$TOTAL ($PERCENTAGE%)${NC}"
  exit 0
else
  echo -e "${RED}‚ùå Design System precisa de ajustes${NC}"
  echo -e "   Testes passados: $PASSED/$TOTAL ($PERCENTAGE%)"
  echo -e "   Testes falhos: $FAILED"
  echo ""
  echo "üí° Execute as corre√ß√µes necess√°rias e tente novamente"
  exit 1
fi
